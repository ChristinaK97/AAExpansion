docs = [
'Exam Type',
'Exam Date',
'Patient',
'sex',
'age',
'weight',
'height',
'BMI',
'CAD',
'Diagnostic question',
'Surgery',
'Therapy',
'b Block',
'CaAnt',
'Ntg',
'ACE in ib',
'A-ary tm',
'sartan',
'diuretics',
'withdrawal of therapy',
'therapy withdrawal from',
'Diabetes',
'Dia Time',
'Insulin Time',
'Hypoglycemic Time',
'Dia complications',
'Dia complications y/n',
'Hypertension',
'Dyslipidemia',
'Smoking',
'Family history of CAD',
'Angina',
'Angina type',
'Angina (0 typical,1 atypical',
'Angina Time',
'Dyspnea',
'Dyspnea type',
'Dyspnea Time',
'Arteropathy',
'Arteropathy location',
'Arteropathy time',
'Stroke/TIA',
'Stroke/TIA date',
'BBsx',
'BPCO',
'PDCM',
'ACS',
'ACS date',
'MI',
'MI date',
'MI location',
'MI 2',
'MI 2 date',
'MI 2 location',
'MI 3',
'MI 3 date',
'MI 3 location',
'Blood sugar',
'Hbgl',
'PCR',
'Col Tot',
'LDL',
'HDL',
'micro alb',
'Proteinuria',
'ECG basal',
'ECG basal date',
'Alterations ECG basal',
'ECG stress',
'ECG stress date',
'min ECG stress',
'watts/mets ECG stress',
'PA basal ECG stess',
'HR basal ECG stress',
'PA acme ECG stress',
'HR acme ECG stress',
'ECG stress Result',
'ECHO date',
'Alterations ECHO',
'Alterations location ECHO',
'EF ECHO',
'MSI',
'Dilatation LV',
'Hypertrophy LV',
'ICA 1',
'ICA 1 date',
'LM 1',
'LAD 1',
'CX 1',
'RCA 1',
'Diag 1',
'OM 1',
'IVP 1',
'Others 1',
'Reva 1',
'CABG',
'CABG date',
'CABG location',
'PCI stent',
'PCI stent date',
'PCI stent location',
'LM treated',
'LAD treated',
'CX tr rea ted',
'RCA treated',
'Diag treated',
'OM treated',
'IVP treated',
'Others treated',
'Alterations ECG basal',
'Notes',
'CADENZA',
'lik Disease',
'lik Ischemia',
'ACM',
'AN CM',
'AEM',
'Result',
'Result report',
'DSp ect',
'Dsss',
'Dsss',
'location Dsss',
'Ds rs',
'Ds rs',
'location Ds rs',
'D sds',
'D sds',
'location D sds',
'DTPD%S',
'DTPD%R',
'DE ccS',
'DEc cR',
'D gated',
'Ds wm st',
'Ds wt st',
'De dv st',
'De sv st',
'Def st',
'DSI ED st',
'DSIES st',
'DTID',
'Ds wm rst',
'Ds wt rst',
'De dvr st',
'De sv rst',
'Def rst',
'DSI ED rst',
'DSIES rst',
'Stress',
'Stress time',
'watt',
'mets',
'tm HR',
'tm HR y/n',
'HR basal',
'HR acme',
'pas basal',
'pad basal',
'pas acme',
'pad acme',
'ST',
'ST site',
'angina index',
'Unknown Header 165',
'Unknown Header 167',
'Unknown Header 169',
'Unknown Header 171',
'Unknown Header 173',
'Unknown Header 175',
'Unknown Header 177',
'Unknown Header 179'
]
docs = [d.lower() for d in docs]
#for i, h in enumerate(docs):
#    print(i, h)

import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
vect = TfidfVectorizer(min_df=1)
tfidf = vect.fit_transform(docs)
a = tfidf * tfidf.T.A

for i in range(len(docs)):
    for j in range(i, len(docs)):
        if a[i, j] > 0:
            print(docs[i], docs[j], a[i,j])

# Get matrix indices where the value is greater than 0.5
indexes = np.where(a > 0.5)

# Display the coordinate where the value is greater than 0.5 and is not on the diagonal
s = [(x, y) for x, y in zip(*indexes) if x != y]

# Select one of the document (consistently) and remove duplicates
to_remove = set([min(x, y) for x, y in zip(*np.where(a > 0.5)) if x != y])
print(to_remove)
# Remove duplicates documents in `docs`
docs = [d for i, d in enumerate(docs) if i not in to_remove]
print(docs)

